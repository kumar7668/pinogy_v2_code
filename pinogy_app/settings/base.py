import os  # isort:skip
from pathlib import Path

import environ
from django.urls import reverse_lazy
from django.utils.text import format_lazy
from django.utils.translation import gettext_lazy as _

env = environ.Env()

gettext = lambda s: s  # noqa
DATA_DIR = os.path.dirname(os.path.dirname(__file__))
"""
Django settings for pinogy_app project.

Generated by 'django-admin startproject' using Django 3.1.14.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent

# Take environment variables from .env file
environ.Env.read_env(os.path.join(BASE_DIR, ".env"))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = (
    os.environ.get("SECRET_KEY") or "p3$_25^x0fbi9)rqh0bhtc^4+^u^4tdc2l)8#wf7a^ake8@!g7"
)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = (os.getenv('DEBUG', 'False') == 'True')

ALLOWED_HOSTS = ["*"]
APPEND_SLASH = True


# Application definition


ROOT_URLCONF = "pinogy_app.urls"


WSGI_APPLICATION = "pinogy_app.wsgi.application"


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases
# Database connection
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql_psycopg2",
        'DISABLE_SERVER_SIDE_CURSORS': True,
        "NAME": os.environ.get("POSTGRES_DB") or os.environ.get("DATABASE_NAME"),
        "USER": os.environ.get("POSTGRES_USER") or os.environ.get("DATABASE_USER"),
        "PASSWORD": os.environ.get("POSTGRES_PASSWORD")
        or os.environ.get("DATABASE_PASSWORD"),
        "HOST": os.environ.get("POSTGRES_HOST") or os.environ.get("DATABASE_HOST"),
        "PORT": os.environ.get("POSTGRES_PORT") or os.environ.get("DATABASE_PORT"),
    },
}

# Caching configuration
REDIS_SERVICE = os.environ.get("REDIS_SERVICE")
REDIS_PREFIX = os.environ.get("REDIS_PREFIX", "dev_")
if REDIS_SERVICE:
    CACHES = {
        "default": {
            "BACKEND": "django_redis.cache.RedisCache",
            "LOCATION": REDIS_SERVICE,
            "TIMEOUT": 60*60*8,
            "OPTIONS": {
                "CLIENT_CLASS": "django_redis.client.DefaultClient",
            },
            "KEY_PREFIX": REDIS_PREFIX,
        },
        "select2": {
            "BACKEND": "django.core.cache.backends.dummy.DummyCache",
        },
    }
CACHE_TTL = 60 * 15
CACHE_MIDDLEWARE_ALIAS = "default"
CACHE_MIDDLEWARE_KEY_PREFIX = ""
CACHE_MIDDLEWARE_SECONDS = 60 * 60

ROBOTS_SITEMAP_VIEW_NAME="sitemap"
# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = "en"
PREFIX_DEFAULT_LANGUAGE = os.environ.get('PREFIX_DEFAULT_LANGUAGE', False)

TIME_ZONE = "Asia/Kolkata"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = "/static/"
MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "static_collected", "media")
# STATIC_ROOT = os.path.join(DATA_DIR, "staticfiles")
STATIC_ROOT = os.path.join(BASE_DIR, "static_collected", "static")

STATICFILES_DIRS = (os.path.join(BASE_DIR, "pinogy_app", "static"),)

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    # other finders..
    'compressor.finders.CompressorFinder',
)
COMPRESS_ENABLED = True

SITE_ID = 1


TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            os.path.join(BASE_DIR, "pinogy_app", "templates"),
        ],
        "OPTIONS": {
            "context_processors": [
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "django.template.context_processors.i18n",
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.template.context_processors.media",
                "django.template.context_processors.csrf",
                "django.template.context_processors.tz",
                "sekizai.context_processors.sekizai",
                "django.template.context_processors.static",
                "cms.context_processors.cms_settings",
                "pinogy_shop.context_processors.shop_integration_level_context_processor",
                "pinogy_shop.context_processors.appname",
            ],
            'loaders': [
                (
                    "django.template.loaders.cached.Loader",
                    [
                        'django.template.loaders.filesystem.Loader',
                        'django.template.loaders.app_directories.Loader'
                    ]
                )
            ],
        },
    },
]


MIDDLEWARE = [
    "cms.middleware.utils.ApphookReloadMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.locale.LocaleMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "cms.middleware.user.CurrentUserMiddleware",
    "cms.middleware.page.CurrentPageMiddleware",
    "cms.middleware.toolbar.ToolbarMiddleware",
    "cms.middleware.language.LanguageCookieMiddleware",

    "pinogy_redirect.middleware.Redirect404Middleware",
    "pinogy_app.middleware.UserIPMiddleware",
    "pinogy_app.middleware.LowercaseURLMiddleware",
    "pinogy_shop.middleware.LoginMiddleware",
]

INSTALLED_APPS = [
    "djangocms_admin_style",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.admin",
    "django.contrib.sites",
    "django.contrib.sitemaps",
    "django.contrib.staticfiles",
    "django.contrib.messages",
    "django.contrib.humanize",
    "cmsplugin_cascade",
    "cmsplugin_cascade.clipboard",  # optional
    "cmsplugin_cascade.extra_fields",  # optional
    "cmsplugin_cascade.sharable",  # optional
    "cmsplugin_cascade.segmentation",  # optional
    "django_select2",
    "cms",
    "menus",
    "sekizai",
    "treebeard",
    "djangocms_text_ckeditor",
    "filer",
    "easy_thumbnails",
    "djangocms_bootstrap4",
    "djangocms_bootstrap4.contrib.bootstrap4_alerts",
    "djangocms_bootstrap4.contrib.bootstrap4_badge",
    "djangocms_bootstrap4.contrib.bootstrap4_card",
    "djangocms_bootstrap4.contrib.bootstrap4_carousel",
    "djangocms_bootstrap4.contrib.bootstrap4_collapse",
    "djangocms_bootstrap4.contrib.bootstrap4_content",
    "djangocms_bootstrap4.contrib.bootstrap4_grid",
    "djangocms_bootstrap4.contrib.bootstrap4_jumbotron",
    "djangocms_bootstrap4.contrib.bootstrap4_link",
    "djangocms_bootstrap4.contrib.bootstrap4_listgroup",
    "djangocms_bootstrap4.contrib.bootstrap4_media",
    "djangocms_bootstrap4.contrib.bootstrap4_picture",
    "djangocms_bootstrap4.contrib.bootstrap4_tabs",
    "djangocms_bootstrap4.contrib.bootstrap4_utilities",
    "djangocms_file",
    "djangocms_icon",
    "djangocms_link",
    "djangocms_picture",
    "djangocms_style",
    "djangocms_googlemap",
    "djangocms_video",
    "djangocms_snippet",
    "django_db_logger",
    "solo",
    "aldryn_apphooks_config",
    "parler",
    "taggit",
    "taggit_autosuggest",
    "meta",
    "sortedm2m",
    "djangocms_blog",    
    "colorfield",
    "snowpenguin.django.recaptcha3",
    "snowpenguin.django.recaptcha2",
    "robots",
    "compressor",

    # Local Apps
    "pinogy_app",
    "pinogy_site_config",
    "pinogy_redirect",
    "pinogy_breeds",
    "pinogy_pet",
    "custom_design",
    "common_plugins",
    "carousel_plugins",
    "pos_api",
    "pinogy_cache",
    'pinogy_shop',
    'pinogy_testimonials',
    'pinogy_form_builder',
]

LANGUAGES = (
    # Customize this
    ("en", gettext("en")),
)

CMS_LANGUAGES = {
    # Customize this
    1: [
        {
            "code": "en",
            "name": gettext("en"),
            "redirect_on_fallback": True,
            "public": True,
            "hide_untranslated": False,
        },
    ],
    "default": {
        "redirect_on_fallback": True,
        "public": True,
        "hide_untranslated": False,
    },
}

CMS_TEMPLATES = (
    # Customize this
    ("fullwidth.html", "Fullwidth"),
    ("shop_base.html", "shop_base"),
    ("sidebar_left.html", "Sidebar Left"),
    ("sidebar_right.html", "Sidebar Right"),
)

X_FRAME_OPTIONS = "SAMEORIGIN"

CMS_PERMISSION = True

CMS_PLACEHOLDER_CONF = {}

THUMBNAIL_PROCESSORS = (
    "easy_thumbnails.processors.colorspace",
    "easy_thumbnails.processors.autocrop",
    "filer.thumbnail_processors.scale_and_crop_with_subject_location",
    "easy_thumbnails.processors.filters",
)
META_SITE_PROTOCOL = 'https'  # set 'http' for non ssl enabled websites
META_USE_SITES = True

# CK_EDITOR
CKEDITOR_SETTINGS = {
    "language": "{{ language }}",
    "skin": "moono-lisa",
    "toolbar": "CMS",
    "stylesSet": format_lazy(
        "default:{}", reverse_lazy("admin:cascade_texteditor_config")
    ),
}
# CMS_CACADE
CMSPLUGIN_CASCADE_PLUGINS = ["cmsplugin_cascade.bootstrap4"]

CMSPLUGIN_CASCADE = {}

# CRISPY FORMS BOOTSTRAP5
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"

CRISPY_TEMPLATE_PACK = "bootstrap5"

RECAPTCHA_PUBLIC_KEY  = os.environ.get("RECAPTCHA_PUBLIC_KEY")
RECAPTCHA_PRIVATE_KEY = os.environ.get("RECAPTCHA_PRIVATE_KEY")
RECAPTCHA_DEFAULT_ACTION = 'generic'
RECAPTCHA_SCORE_THRESHOLD = 0.5
RECAPTCHA_LANGUAGE = 'en'

CLIENT_ID = os.environ.get("CLIENT_ID") or "NOT SET"
INTEGRATION_ID = os.environ.get("INTEGRATION_ID") or "NOT SET"
BASE_TYPE = os.environ.get("BASE_TYPE") or "GCP"

# BLOG Related Setting
BLOG_AUTO_SETUP = False

#FLAG FOR SHOP HEADER
SHOP_HEADER = False
DISPLAY_V3_CAPTCHA = True

# UPDATION SETTING
CMS_COLOR_SCHEME_TOGGLE = True
CMS_COLOR_SCHEME = "light"
DEFAULT_AUTO_FIELD='django.db.models.AutoField'
THUMBNAIL_EXTENSION = "webp"
THUMBNAIL_TRANSPARENCY_EXTENSION = "webp"

#OVERIDE BOOTSTRAP PICTURE ALIGNMENT
DJANGOCMS_PICTURE_ALIGN = [        
    ('left mx-auto d-block ms-0', _('Align left')),
    ('right mx-auto d-block me-0', _('Align right')),
    ('center mx-auto d-block', _('Align center')),          
]

REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ]
}